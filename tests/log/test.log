--------------------------------------------------------------------------------------------------------------------------------------------
      name:  test_log
       log:  -PWD-/log/test.log
  log type:  text
 opened on:  -normalized-

. log using log/test.smcl, replace name(test_smcl)
--------------------------------------------------------------------------------------------------------------------------------------------
      name:  test_smcl
       log:  -PWD-/log/test.smcl
  log type:  smcl
 opened on:  -normalized-

. 
. ******** Test the stata.trk normalizer *******
. cap make_trk_paths

. if `=_rc'==199 { //doesn't exist
.         * net {describe|from|get|install} don't accept relative paths, so use absolute
.         net install stata_reproducible, from(`c(pwd)'/../)
.         *But then stata.trk file can't be committed to VC if used in other places. So make relative
.         make_trk_paths relative, net_ado(ado/)
. }

. else { //100 "syntax error" -> Exists
.         * If you want to reinstall (possibly because of an update), then the following options have problems
.         * Option 1: Manual reinstall
.         *   -net install, from(<abs_path> replace- 
.         *   a nearly identical entry is added to stata.trk since paths don't match and this can cause problems for program tools
.         * Option 2: Auto-update
.         *   -adoupdate, update- 
.         *   fails because -net install- can't take relative. Also errors silently and without setting _rc !!!
.         *
.         * Instead, do one of the following:
.         * Solution 1:
.         *   -ado uninstall stata_reproducible-
.         *   Then install as above
.         * Solution 2: Temporarily convert stata.trk to using absolute paths
.         make_trk_paths absolute, net_ado(ado/)
.         adoupdate, update
(note: adoupdate updates user-written files; type -update- to check for updates to official Stata)

Checking status of installed packages...

    [1] stata_reproducible at -PROJ_BASE-:
        installed package is up to date

(no packages require updating)
.         * Or -net install <pkg>, from(<abs_path>) replace 
.         *   <abs_path> must be normalized to remove any "<dir>/../" like we use above 
.         *   (FWIW: -get_absolute_path_from_relative- returns this)
.         make_trk_paths relative, net_ado(ado/)
. }

. 
. sysuse auto, clear
(1978 Automobile Data)

. compress
  mpg was int now byte
  rep78 was int now byte
  trunk was int now byte
  turn was int now byte
  make was str18 now str17
  (370 bytes saved)

. 
. *Use -quiet- before commands that display differently on different platforms 
. * (e.g. use OMIT_FIG_EXP or use `main_version')
. 
. ******** Export platform-version specific versions ********
. * This is to see all the differences. Be specific about versions
. local main_version = substr("`c(stata_version)'",1,2)

. 
. qui save raw/auto-v`main_version'-raw.dta, replace

. if `main_version'==14 qui saver auto-v13-from-v14.dta, replace version(13)

. *qui below because v13 vs v14 will show "data sig. set" vers "reset"
. qui saver auto.dta, replace version(`main_version') //so graphs have same dataset location. 

. copy auto.dta auto-v`main_version'.dta, replace

. erase auto.dta

. 
. twoway (scatter mpg price), title("Title") note("Notes") //has to go after save as data path written

. qui graph save raw/scatter-v`main_version'-`c(os)'-raw.gph, replace

. if `main_version'==14 qui graph_saver scatter-v13-from-v14.gph, replace version(13)

. qui graph_saver scatter-v`main_version'.gph, replace version(`main_version')

. 
. qui graph_exportr scatter-v`main_version'-`c(os)'.eps, replace

. *Can't export to PDF on Unix for version <14 (sometimes Unix v14, but not always)
. cap /*noi*/ graph_exportr scatter-v`main_version'-`c(os)'.pdf, replace

. 
. ******** Simulate a workflow to get canonical versions **********
. saver data/auto.dta, replace
  (0 bytes saved)
  74:12(71728):2155345365:1865188037       (data signature reset)
file data/auto.dta saved

. qui save_all_figs scatter

. 
. *If another platform updates gphs,then run this
. if "$OMIT_FIG_EXPORT"=="0"{
.         qui do gen_ext_from_gph.do
. }

. 
. 
. ******** Check that everything wrote fine ********
. foreach dta in auto-v13.dta auto-v13-from-v14.dta `=cond(`main_version'==14,"auto-v14.dta","")' {
  2.         qui use `dta', clear
  3.         qui datasignature confirm
  4. }

. 
. graph use scatter-v13.gph, nodraw

. graph use scatter-v13-from-v14.gph, nodraw

. if `main_version'==14 qui graph use scatter-v14.gph, nodraw

. 
. 
. ******* Check the log normalization **************
. local main_version ""

. global OMIT_FIG_EXPORT ""

. display_run_specs /*creturn list has too many things to null out*/
Flavor = -normalized-
               Revision = -normalized-
c(os) = -normalized-
c(osdtl) = -normalized-
c(machine_type) = -normalized-
c(byteorder) = -normalized-
            c(hostname) = -normalized-
                 c(pwd) = "-PWD-"
c(stata_version) = -normalized-
c(processors) = -normalized-

. mac dir
S_FNDATE:       -normalized-
S_FN:           -normalized-
T_gm_fix_span:  0
PROJ_ROOT:      -PROJ_BASE-/
S_ADO:          -normalized-
GPH_DEFAULT_VERSION:
                13
DTA_DEFAULT_VERSION:
                13
S_FLAVOR:       -normalized-
S_OS:           -normalized-
S_MACH:         -normalized-
_pwd:           -PWD-

. tempfile tfile

. save `tfile'
file -TMPDIR-/-tempfile- saved

. 
. *set trace on
. log_closer test_log, raw_dir(raw) rw_line_user_post(rw_line_user)
      name:  test_log
       log:  -PWD-/log/test.log
  log type:  text
 closed on:  -normalized-
--------------------------------------------------------------------------------------------------------------------------------------------
